@model IEnumerable<haver.Models.SalesOrder>

@if (TempData["Message"] != null)
{
    <div id="autoDismissAlert" class="alert alert-success alert-dismissible fade show mb-4" role="alert">
        <i class="fas fa-check-circle"></i>
        @TempData["Message"]

        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>


}

<h1 class="text-center my-4">Sales Orders</h1>

@{
    // Create route value dictionaries for each tab
    var routeValues = new Dictionary<string, Dictionary<string, string>>
            {
                ["Active"] = new Dictionary<string, string>(),
                ["Archived"] = new Dictionary<string, string> { ["status"] = "Archived" },
                ["Completed"] = new Dictionary<string, string> { ["status"] = "Completed" },
                ["Draft"] = new Dictionary<string, string> { ["status"] = "Draft" }
            };

    // Preserve existing query parameters
    foreach (var key in Context.Request.Query.Keys.Where(k => k != "status" && k != "page"))
    {
        foreach (var dict in routeValues.Values)
        {
            dict[key] = Context.Request.Query[key];
        }
    }

    // Set page=1 for all tabs
    foreach (var dict in routeValues.Values)
    {
        dict["page"] = "1";
    }
}

<ul class="nav nav-tabs mb-3">
    <li class="nav-item">
        <a class="nav-link @(ViewBag.Status == null ? "active" : "")"
           href="@Url.Action("Index", routeValues["Active"])">
            <i class="fas fa-list"></i> Active
        </a>
    </li>
    <li class="nav-item">
        <a class="nav-link @(ViewBag.Status == "Completed" ? "active" : "")"
           href="@Url.Action("Index", routeValues["Completed"])">
            <i class="fas fa-check-circle"></i> Completed
        </a>
    </li>
    <li class="nav-item">
        <a class="nav-link @(ViewBag.Status == "Archived" ? "active" : "")"
           href="@Url.Action("Index", routeValues["Archived"])">
            <i class="fas fa-archive"></i> Archived
        </a>
    </li>
    <li class="nav-item">
        <a class="nav-link @(ViewBag.Status == "Draft" ? "active" : "")"
           href="@Url.Action("Index", routeValues["Draft"])">
            <i class="fas fa-file-alt"></i> Drafts
        </a>
    </li>
</ul>



<div class="d-flex justify-content-between align-items-center mb-3">
    <!-- Create button remains the same -->
    <a asp-action="Create" class="btn" aria-label="Create a new sales order" data-bs-toggle="tooltip" title="Create a new sales order">
        <i class="fa-solid fa-plus"></i> Create New @ViewData["ControllerFriendlyName"]
    </a>
</div>

<form asp-action="Index" method="get" aria-label="Sales Order filter form">
    <input type="hidden" name="status" value="@ViewBag.Status" />
  
    <div class="form-horizontal">
        <!-- Existing hidden fields for sort -->
        <input type="hidden" name="sortDirection" value="@ViewData["sortDirection"]" />
        <input type="hidden" name="sortField" value="@ViewData["sortField"]" />

        <!-- Existing filter toggle button -->
        <button class="btn @ViewData["Filtering"] mb-3" type="button" data-bs-toggle="collapse"
                id="filterToggle" data-bs-target="#collapseFilter" aria-expanded="false"
                aria-controls="collapseFilter" aria-label="Toggle filter/search options"
                data-bs-toggle="tooltip" title="Filter/Search">
            <i class="fa-solid fa-filter"></i> Filter/Search @ViewData["numberFilters"]
        </button>

        <!-- Existing filter content -->
        <div class="collapse @ViewData["ShowFilter"]" id="collapseFilter">
            <div class="card card-body bg-light">
                <div class="row">
                    <!-- Your existing filter controls -->
                    <div class="form-group col-md-4">
                        <label class="form-label fw-bold" for="SearchString">Search Customer:</label>
                        @Html.TextBox("CString", null, new { @class = "form-control", placeholder = "Enter Company Name", aria_label = "Enter customer to search" })
                    </div>
                    <div class="form-group col-md-4">
                        <label class="form-label fw-bold" for="SearchString">Search Order Number:</label>
                        @Html.TextBox("SearchString", null, new { @class = "form-control", placeholder = "Enter Order Number", aria_label = "Enter order number to search" })
                    </div>
                    <div class="form-group col-md-4">
                        <label class="form-label fw-bold" for="SearchString">Search Order Date:</label>
                        @Html.TextBox("DtString", null, new { @class = "form-control", placeholder = "Search by Order Date", aria_label = "Search by Order Date", type="date" })
                    </div>
                    <div class="form-group col-md-4 align-self-end">
                        <input type="submit" name="actionButton" value="Filter" class="btn btn-outline-primary" aria-label="Apply filter" data-bs-toggle="tooltip" title="Apply filter" />
                        <a asp-action="Index" class="btn btn-outline-secondary" aria-label="Clear filter" data-bs-toggle="tooltip" title="Clear filter">Clear</a>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <table class="table table-striped table-bordered table-hover shadow-sm">
        <thead class="bg-dark text-white text-center">
            <tr>
                @foreach (var field in new[] { "Order Number", "Order Date", "Customer" })
                {
                    <th class="align-middle">
                        <button class="btn btn-link text-white p-0 fw-bold text-decoration-none" type="submit" name="actionButton" value="@field" aria-label="Sort by @field" data-bs-toggle="tooltip" title="Sort by @field">
                            @field
                            @if (ViewData["sortField"]?.ToString() == field)
                            {
                                <i class="fa-solid @(ViewData["sortDirection"]?.ToString() == "asc" ? "fa-arrow-up" : "fa-arrow-down")"></i>
                            }
                        </button>
                    </th>
                }
                <th class="align-middle">Engineers</th>
                <th class="align-middle">Actions</th>
            </tr>
        </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.OrderNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SoDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CompanyName)
            </td>
                    <td>
                        @{
                            int specCount = item.SalesOrderEngineers.Count;
                            if (specCount > 0)
                            {
                                string firstSpec = item.SalesOrderEngineers.FirstOrDefault().Engineer.EngineerInitials;
                                if (specCount > 1)
                                {
                                    string specList = "";//Html string of specialty names separated by <br /> tags
                                    var s = item.SalesOrderEngineers.ToList();
                                    for (int i = 1; i < specCount; i++)//Skip the first because we have it already
                                    {
                                        specList += s[i].Engineer.EngineerInitials + " <br />";
                                    }
                                    <a class="" role="button" data-bs-toggle="collapse" href="#collapseSpecalty@(item.ID)"
                                       aria-expanded="false" aria-controls="collapseSpecalty@(item.ID)">
                                        @firstSpec <span class="badge bg-info">@specCount</span>
                                    </a>
                                    <div class="collapse" id="collapseSpecalty@(item.ID)">
                                        @Html.Raw(specList)
                                    </div>
                                }
                                else
                                {
                                    @firstSpec
                                }
                            }
                        }
                    </td>
                    <td class="text-center">
                        @if (item.Status == Status.Completed)
                        {
                            <span class="badge bg-success">Completed</span>
                            <a asp-action="Details" asp-route-id="@item.ID" class="btn btn-sm mx-1 text-white" aria-label="View details of  @item.OrderNumber" data-bs-toggle="tooltip" title="Complete">
                                <i class="fa-solid fa-circle-info"></i> Details
                            </a>
                        }
                        else if (item.Status == Status.Archived)
                        {
                            <span class="badge bg-secondary">Archived</span>
                            <a asp-action="Details" asp-route-id="@item.ID" class="btn btn-sm mx-1 text-white" aria-label="View details of @item.OrderNumber" data-bs-toggle="tooltip" title="View details">
                                <i class="fa-solid fa-circle-info"></i> Details
                            </a>
                            <a asp-action="Restore" asp-route-id="@item.ID" class="btn btn-sm mx-1 text-white" aria-label="Restore @item.OrderNumber" data-bs-toggle="tooltip" title="Restore"
                               onclick="return confirm('Are you sure you want to restore this sales order?');">
                                <i class="fas fa-trash-restore"></i> Restore
                            </a>
                        }
                        else if (item.Status == Status.Draft)
                        {
                            <span class="badge bg-warning text-dark">Draft</span>
                            <a asp-action="Continue" asp-route-id="@item.ID" class="btn btn-sm  mx-1" aria-label="Continue editing sales order @item.OrderNumber" data-bs-toggle="tooltip" title="Continue editing"
                               onclick="return confirm('Are you sure you want to continue, if yes status will be changed to active')";>
                                <i class="fa-solid fa-play"></i> Continue
                            </a>
                        }
                        else
                        {
                            <a asp-action="Edit" asp-route-id="@item.ID" class="btn btn-sm mx-1" aria-label="Edit machine @item.OrderNumber" data-bs-toggle="tooltip" title="Edit machine">
                                <i class="fa-solid fa-pen-to-square"></i> Edit
                            </a>
                            <a asp-action="Details" asp-route-id="@item.ID" class="btn btn-sm mx-1 text-white" aria-label="View details of machine @item.OrderNumber" data-bs-toggle="tooltip" title="View details">
                                <i class="fa-solid fa-circle-info"></i> Details
                            </a>
                            <a asp-action="Archive" asp-route-id="@item.ID" class="btn btn-sm mx-1" aria-label="Archive sales order @item.OrderNumber" data-bs-toggle="tooltip" title="Archive sales order" onclick="return confirm('Are you sure you want to archive this sales order?');">
                                <i class="fa-solid fa-box-archive"></i> Archive
                            </a>
                        }
                    </td>



        </tr>
}
    </tbody>
</table>
    <partial name="_PagingNavBar" />
</form>
@section Scripts {
    <script type="text/javascript">
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl)
        })
    </script>
}

<style>
    .align-middle button {
        background: none;
        outline: none;
    }

    .nav-tabs {
        display: flex;
        justify-content: space-evenly; 
    }

    .nav-item {
        margin-right: 15px; 
    }

    .nav-link {
        padding: 10px 15px;
        font-size: 16px;
        color: #001a3d;
    }

        .nav-link.active {
            background-color: #007bff;
            color: white;
            border-radius: 5px;
            font-weight: bold;
        }

        .nav-link i {
            margin-right: 8px;
            vertical-align: middle;
        }

        .nav-link:hover {
            background-color: #f0f0f0;
            color: #0056b3;
            text-decoration: none;
        }

    h1 {
        margin-bottom: 20px; 
        font-size: 24px; 
    }

   
</style>